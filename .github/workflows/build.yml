name: CI/CD

on:
  workflow_run:
    workflows: [Test]
    branches: [develop, main]
    types: 
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:   
      - name: Setup env variables
        run: |
          echo "DOCKER_SERVICE=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
            ref: ${{ github.event.workflow_run.head_branch }}

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Is Tag Build
        id: tag
        if:  ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Set Branch Name
        id: branch
        if: ${{ contains('main,develop', github.ref_name) }}
        run: |
          branch_name=${GITHUB_REF##*/}
          if [[ "$branch_name" == "develop" ]]; then
            echo "branch=test" >> $GITHUB_OUTPUT
          elif [[ "$branch_name" == "main" ]]; then
            echo "branch=prod" >> $GITHUB_OUTPUT
          else
            echo "branch=unknown" >> $GITHUB_OUTPUT
          fi

# Build
      - name: Build
        run: ./scripts/build.sh ${{ env.DOCKER_SERVICE }} ${{ github.event.repository.url }}

# Push to Github
      - name: Tag service git id docker image
        if: ${{ steps.tag.conclusion == 'skipped' }}
        run: ./scripts/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ github.event.workflow_run.head_sha }}

      - name: Tag service git id docker image
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./scripts/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ github.sha }}

      - name: Tag service dev docker image
        run: ./scripts/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:dev

      - name: Push service git id docker image.
        if: ${{ steps.tag.conclusion == 'skipped' }}
        run: ./scripts/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ github.event.workflow_run.head_sha }}

      - name: Push service git id docker image.
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./scripts/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ github.sha }}

      - name: Push dev docker image.
        run: ./scripts/docker-push.sh ${{ env.DOCKER_SERVICE }}:dev

      - name: Push latest service docker image
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./scripts/docker-push.sh ${{ env.DOCKER_SERVICE }}:latest

      - name: Tag version service docker image
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./scripts/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}

      - name: Push version service docker image.
        if: ${{ steps.tag.conclusion != 'skipped' }}
        run: ./scripts/docker-push.sh ${{ env.DOCKER_SERVICE }}:${{ steps.tag.outputs.VERSION }}

  # Update verion i config       
      - name: Checkout Target Repository
        id: checkout
        uses: actions/checkout@v2
        if: ${{ steps.branch.conclusion != 'skipped' && steps.branch.outputs.branch != 'unknown'  && secrets.ACCESS_ARGO_APPS != '' }}
        with:
          repository: Randers-Kommune-Digitalisering/kithosting-randers-kommune-apps
          ref: ${{ steps.branch.outputs.branch }}
          path: infrastructure
          ssh-key: ${{ secrets.ACCESS_ARGO_APPS }}
          
      - name: Install yq
        if: ${{ steps.checkout.conclusion == 'success' }}
        run: |
          sudo apt install -y jq

      - name: Update version
        if: ${{ steps.checkout.conclusion == 'success' && steps.tag.conclusion == 'skipped' && steps.branch.outputs.branch == 'test'}}
        run: |
          yq e ".service.image.tag = \"${{ github.sha }}\"" -i infrastructure/python-app-template/values.yaml

      - name: Update version
        if: ${{ steps.checkout.conclusion == 'success' && steps.tag.conclusion != 'skipped' }}
        run: |
          yq e ".service.image.tag = \"${{ steps.tag.outputs.VERSION }}\"" -i infrastructure/python-app-template/values.yaml

      - name: Commit and push
        if: ${{ steps.checkout.conclusion == 'success' }}
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          cd infrastructure
          if [[ -n "$(git status -s)" ]]; then
            git commit -am "Update version"
            git push
          fi